@import "mixin";

/** conitaner style */

.container {
    @include size(340px, 365px);
    background-color: transparent;
    box-shadow: 6px 6px 14px rgba(0, 0, 0, 0.2), -8px -8px 16px rgba(255, 255, 255, 0.65);
    border-radius: 12px;
    position: relative;
    /** centeral P for show Timer */
    p {
        position: absolute;
        font-size: 2.5rem;
        font-family: var(--font-family2);
        color: var(--frist-color);
        left: 24%;
        top: 50%;
        transition: background-color 2s ease-in-out;
    }
}


/** controll button stop and play and lap */

.controll-btn {
    @include size(100%, 45px);
    @include flex(flex, space-between, center, row-reverse);
    font-size: 1.4rem;
    padding: 7px 7px 0;
    text-align: center;
    span {
        width: 35px;
        height: 100%;
        cursor: pointer;
        line-height: 1.2;
        i {
            color: var(--bg-icon);
            font-size: 2rem;
        }
    }
}

.stopwatch {
    @include size(100%, 320px);
    position: relative;
    color: var(--frist-color);
    transform: rotate(270deg);
    /** becuse li has postion absolute  and top left 50% frist li strat the left */
    .clockline {
        li {
            @include size(2px, 20px);
            border-radius: 2px;
            background-color: var(--frist-color);
            position: absolute;
            left: 50%;
            top: 50%;
            // animation: loading 1s linear infinite;
            $r: 150;
            @for $i from 1 through 100 {
                //What I want to repeat
                &:nth-child(#{$i}) {
                    $angle: 450 + (360 / 100) * $i;
                    $radian: (360 / 100) * ($pi / 180) * $i;
                    $x: $r * cos($radian) + px;
                    $y: $r * sin($radian) + px;
                    transform: translate($x, $y) rotate($angle + deg);
                    transform-origin: 100% 0%;
                    animation-delay: unquote("0.#{$i}s");
                    @if ($i % 5)==0 {
                        height: 32px;
                    }
                }
            }
            @for $j from 1 to 10 {
                &:nth-child(#{$j}) {
                    animation-delay: unquote("#{$j}ms");
                }
            }
        }
    }
}

@keyframes loading {
    // 0% {
    //     background: var(--frist-color) none repeat scroll 0% 0%;
    // }
    // 50% {
    //     background: #17aef3 none repeat scroll 0% 0%;
    // }
    // 100% {
    //     background: var(--frist-color) none repeat scroll 0% 0%;
    // }
    0% {
        opacity: 1;
        background: #17aef3 none repeat scroll 0% 0%;
    }
    100% {
        opacity: 0;
    }
}


/** active loading animation when user click on start btn */

.active {
    animation: loading 1s linear infinite;
}


/** stow watch 2 style */

.cornometer {
    @include size(80%, 80vh);
    @include flex(flex, space-around, center, column);
}

// extand class in
%inherit-flex {
    @include flex(flex, space-around, center);
}

.timer {
    @include size(inherit, 30vh);
    @extend %inherit-flex;
}

.times {
    @include size(20%, 85%);
    background-color: transparent;
    box-shadow: 6px 6px 14px rgba(0, 0, 0, 0.2), -8px -8px 16px rgba(255, 255, 255, 0.65);
    text-align: center;
    border-radius: 5px;
    overflow: hidden;
    cursor: pointer;
    display: flex;
    justify-content: space-around;
    flex-direction: column;
    font-family: var(--font-family2);
    color: var(--fiveth-color);
    p {
        font-size: 4rem;
    }
    span {
        color: var(--threet-color);
        font-size: 3rem;
    }
    &:hover {
        box-shadow: inset 5px 5px 10px #bcbcbc, inset -5px -5px 10px #ffffff;
    }
    transition: all 1s ease-in-out;
}

.timer-btn-group {
    @extend %inherit-flex;
    width: 80%;
    color: var(--fiveth-color);
}

.timer-btn {
    @include size(120px, 40px);
    background-color: transparent;
    box-shadow: 6px 6px 14px rgba(0, 0, 0, 0.2), -8px -8px 16px rgba(255, 255, 255, 0.65);
    color: var(--threet-color);
    border-radius: 5px;
    border: none;
    font-size: 2rem;
    cursor: pointer;
    transition: box-shadow 1.2 ease-in-out;
    &:active {
        transition: all 2.5s ease-in-out;
        box-shadow: inset 5px 5px 10px #bcbcbc, inset -5px -5px 10px #ffffff;
    }
}

#record {
    @include size(40%, 200px);
    resize: none;
    border: none;
    font-size: 2rem;
    color: map-get($map: $color, $key: one);
    padding: 10px;
    font-weight: bold;
    border-radius: 20px;
    margin-top: 20px;
    text-align: center;
    background-color: transparent;
    box-shadow: 6px 6px 14px rgba(0, 0, 0, 0.2), -8px -8px 16px rgba(255, 255, 255, 0.65);
}

.active-button {
    box-shadow: inset 5px 5px 10px #bcbcbc, inset -5px -5px 10px #ffffff;
    i {
        color: #17aef3;
    }
}